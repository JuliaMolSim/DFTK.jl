stages:
  - test

# This job tests DFTK.jl with Julia 1.8 on Noctua 2
# It only runs when:
#    - Commit in master
#    - PR from branch with name ending in "gpu"
#    - Manual run triggered
julia/1.8-n2:
  stage: test
  variables:
    # SCHEDULER_PARAMETERS: "-N 1 -n 1 -c 16 --gres=gpu:a100:1 --qos=devel -p dgx -t 00:15:00 -A hpc-prf-dftkjl"
    SCHEDULER_PARAMETERS: "-N 1 -n 1 -c 16 --gres=gpu:a100:1             -p gpu -t 00:30:00 -A hpc-prf-dftkjl"
    JULIA_NUM_THREADS: "1"  # GPU and multi-threading not yet compatible
    JULIA_LOAD_PATH: "test/configuration_cuda11:"  # Needed to pick up LocalPreferences.toml
  coverage: '/\(\d+.\d+\%\) covered/'
  rules:
    - if: $CI_COMMIT_BRANCH   == "master"
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event" && $CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME =~ /gpu$/
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"
      when: manual
  script:
    - module load lang/JuliaHPC/1.9.0-foss-2022a-CUDA-11.7.0
    # testing
    # - julia --color=yes --project=. -e '
    #     using Pkg;
    #     Pkg.test(; coverage=true, test_args=["gpu"])
    #   '
    # The above does not work, because Pkg.test seems just ignores the JULIA_LOAD_PATH
    # and thus does not pick up the custom preferences ... so we need to do it manually
    - julia --color=yes -e 'using Pkg; Pkg.add("TestEnv")'
    - julia --color=yes --code-coverage --project=. -e '
        using TestEnv;
        TestEnv.activate("DFTK");
        include("test/runtests.jl")
      ' gpu
    # end testing
    - julia --color=yes --project=test/coverage -e 'import Pkg; Pkg.instantiate()'
    - julia --color=yes --project=test/coverage test/coverage/coverage.jl
