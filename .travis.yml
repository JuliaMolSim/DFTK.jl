branches:
  only:
    # Only build master and version tags
    - master
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/

language: julia
cache:
  directories:
  - $HOME/.julia/artifacts

env:
  global:
    - PYTHON=""  # Force using Conda in PyCall
script: |  # Install dependencies and test with coverage
  julia -e '
    using Pkg
    Pkg.build(; verbose=true)

    # Some optional python packages via conda
    using Conda
    # nomkl: https://github.com/JuliaPy/PyCall.jl/issues/801
    #        https://github.com/bigartm/bigartm/issues/1022
    for pkg in ["nomkl", "ase"]
        Conda.add(pkg; channel="conda-forge")
    end

    Pkg.test(coverage=true)
  '
after_success: |  # Upload coverage when things are good.
  julia -e '
    using Pkg; Pkg.add("Coverage"); using Coverage;
    coverage = Coveralls.process_folder();
    for excluded in ["src/FourierTransforms.jl", "src/eigen/diag_lobpcg_itsolve.jl"]
        filter!(c -> !occursin(excluded, c.filename), coverage);
    end
    Coveralls.submit(coverage)
  '

os:
  - linux
  - osx
julia: "1.3"

jobs:
  allow_failures:  # Allow to fail on nightly
    - julia: nightly
  include:
    - julia: nightly
      os: linux
    - stage: "Documentation"
      os: linux
      script:
        - |
          julia --project=docs/ -e '
              using Pkg
              Pkg.develop(PackageSpec(path=pwd()))
              Pkg.instantiate()
              Pkg.build("DFTK")

              # Some optional python packages via conda
              Pkg.add("Conda")
              using Conda
              # matplotlib 3.2.2 requirement can be removed once ASE 3.20.1 is in conda
              for pkg in ["ase", "matplotlib =3.2.2"]
                  Conda.add(pkg; channel="conda-forge")
              end
          '
        - julia --project=docs/ docs/make.jl
      after_success: skip

notifications:
  email: false
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/675ffcbb101b5d1a3424
    on_success: always
    on_failure: always
