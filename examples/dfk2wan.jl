# # DFTK - Wannier90 interface
#
# DFTK features an interface with the program
# [Wannier90](http://www.wannier.org/),
# in order to compute maximally-localised Wannier functions (MLWFs)
# from an initial scf calculation. Wannier90 needs one input file
# `.win` that contains the parameters of the calculations and the
# description of the system, as well as three data files `.mmn`,
# `.amn` and `.eig`. These files are respectively generated by
# the functions [`dtk2wan_win_file`](@ref) and
# [`dftk2wan_wannierization_files`](@ref). The whole procedure
# takes five steps :
#
#     - SCF calculation
#     - call to dftk2wan_win_file
#     - Wannier90 preprocessing step
#     - call to dftk2wan_wannierization_files
#     - Wannier90's computation of MLWFs
#
# This example shows how to obtain the MLWFs corresponding
# to the first eight bands of silicon. Since the bands 5 to 8 are entangled,
# 12 bands are first computed to obtain 8 MLWFs by a disantanglement procedure.
# We first perfom a SCF calculation, which is for the most part identical to the
# regular case.
#
# !!! warning "Compatibility asks for a specific setup"
#     The `.win` file will
#     correspond to the studied system only if the number of ``k``
#     points and bands in input is the same as in output.
#     Since DFTK reduces by default
#     the number of ``k`` points by symmetry, and adds automaticaly
#     three non-converged bands, one must specify :
#     - `use_symmetry = false` in the creation of the plane wave basis
#     - `n_ep_extra = 0` in the self_consistent_field declaration.
#

using DFTK

a = 10.26
lattice = a / 2*[[-1.  0. -1.];
                 [ 0   1.  1.];
                 [ 1   1.  0.]]

Si = ElementPsp(:Si, psp=load_psp("hgh/pbe/Si-q4"))
atoms = [ Si => [zeros(3), 0.25*[-1,3,-1]] ]

model = model_PBE(lattice,atoms)

kgrid = [4,4,4]
Ecut = 20
basis = PlaneWaveBasis(model, Ecut; kgrid=kgrid, optimize_fft_size = true, use_symmetry=false)

scfres = self_consistent_field(basis, tol=1e-12, n_bands = 12, n_ep_extra = 0);

# We may now create the `.win` file. In addition of informations on the system
# (via `basis`, `scfres` and `kgrid`) the functon asks for a name (here "Si") and
# the number of wanted MLWFs; 8 in our case. The keyword `bands_plot = true`
# adds the ``k`` point path to the win file, needed to plot the bands structure.
# We also add as keyword arguments the parameters of the disentanglement
# procedure. Any other argument can be added as such.

dftk2wan_win_file("Si", basis, scfres, kgrid, 8;
                  bands_plot=true, num_print_cycles=50, num_iter=500,
                  dis_win_max       = "17.185257d0",
                  dis_froz_max      =  "6.8318033d0",
                  dis_num_iter      =  120,
                  dis_mix_ratio     = "1d0")

# We then perfom a preproprocessing task via Wannier90 to generate
# the `Si.nnkp` file. This is simply done by :

#md #```@raw bash
#md #$ PathToWannier90/wannier90.x -pp Si

# The `nnkp` file is read by `dftk2wan_wannierization_files` in order to
# generate the `.mmn`, `.amn` and `.eig` files. This functions ask once again
# for informations on the system via the prefix "Si", basis,
# scfres and the number of wanted MLWFs.
# The other main argument concerns the guess MLWFs used to compute `amn`.
# 
#
# - The default guess is  `guess = "gaussian"`, which  asks for gaussian guesses
#   whose centers are specified by
#   `centers = [ [center 1] .... [center N_{MLWFs}] ]`. If none are given,
#    DFTK uses a random set of centers.
#
# - If a `projections` bloc is added in the `win` file, e.g.

#md #```@raw bash
#md #begin projections
#md #Si:sp3
#md #end projections    

# one may ask for `guess = "win"` to use the guess generated by Wannier90
# preprocessing.
#
# - One can also use the SCDM routine to compute the ``A_{mn}`` matrices
#  with the keyword `guess = "SCDM"`.
#
# We choose in this case a particular set of centers.

gaussian_centers = [[0.5015509603234882 -0.9383010519357127 0.3088836591138362],
                    [0.019614265846318535 -0.23998060955804368 -0.46093405625587947],
                    [-0.5348363245877943 -0.18229670930318376 -0.6343451138275387],
                    [-0.013759655088319 0.5442055753262469 -0.7100796445856989],
                    [-0.5251185300723886 -0.8248213215084252 -0.9649113622642598],
                    [-0.2686176242545062 -0.7482827011047073 -0.07570849122089962],
                    [-0.2921247757868213 -0.5837393749686632 0.7220438179943076],
                    [-0.96779543009003 -0.15368047311514532 -0.9881019287433053]]

dftk2wan_wannierization_files("Si", basis, scfres, 8;
                              guess = "gaussian",
                              centers = gaussian_centers)

# Once the file are generated, the user can simply call the wannierization
# procedure with :

#md #```@raw bash
#md #$ PathToWannier90/wannier90.x Si

# Note that it can be useful to compute several `.amn` files to test different
# guesses. The user can simply disable the generation of a
# specific file with the keyword arguments `write_mnn = false`,
# `write_amn = false` or `write_eig = false`.








